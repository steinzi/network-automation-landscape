[{"category":"Python Eco-System","homepage_url":"https://avd.arista.com","id":"python-eco-system--software-libraries--avd","logo_url":"https://steinzi.com/network-automation-landscape/logos/0db22a0d8a7c0338276422ef9ddb67dd94c541e5379c45aea710c812555f64ff.png","name":"AVD","subcategory":"Software Libraries","description":"AVD (Arista Validated Designs) is an Ansible collection that can be used also as a python standalone library (PyAVD) developed by Arista Networks. It provides a set of roles and modules to automate the deployment and management of Arista EOS-based network infrastructures.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/aristanetworks/avd","languages":{"Dockerfile":4818,"Jinja":909807,"Makefile":8702,"Python":3915827,"Rust":179676,"Shell":2653},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://diffsync.readthedocs.io/en/latest/index.html","id":"python-eco-system--software-libraries--diffsync","logo_url":"https://steinzi.com/network-automation-landscape/logos/aace2c73b9323ac1ea4326e4bb08af42217f34f7d0784dd994eae913d3ff373d.png","name":"DiffSync","subcategory":"Software Libraries","description":"DiffSync is a utility library that can be used to compare and synchronize different datasets.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/diffsync","languages":{"Dockerfile":475,"Python":231294},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://hier-config.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--hierarchical-configuration","logo_url":"https://steinzi.com/network-automation-landscape/logos/c55ce18fc6119d77d3e9861372fe4ac81573eec2b47acb95f4dfab493aa7a53f.svg","name":"Hierarchical Configuration","subcategory":"Software Libraries","description":"Query and compare network device configurations. Build remediation and rollback configs too.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/netdevops/hier_config","languages":{"Python":250968},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://ncclient.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--ncclient","logo_url":"https://steinzi.com/network-automation-landscape/logos/614426f2d90e234bbe4302ab8f1bd79748e1eecc08020846c51b985d1b052fb1.webp","name":"ncclient","subcategory":"Software Libraries","description":"ncclient is a Python library that facilitates client-side scripting and application development around the NETCONF protocol.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/netutils","languages":{"Dockerfile":227,"Jinja":59,"Python":6227797,"TypeScript":816},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://diffsync.readthedocs.io/en/latest/index.html","id":"python-eco-system--software-libraries--ncdiff","logo_url":"https://steinzi.com/network-automation-landscape/logos/e4ba069e5dd443c224011a82ac94d3b0b5519cd73b8baf1824dc9365fb6bfb0a.png","name":"ncdiff","subcategory":"Software Libraries","description":"Extended ncclient NETCONF client with diff capabilities.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/CiscoTestAutomation/ncdiff/","languages":{"Makefile":2573,"Python":538101},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://github.com/ktbyers/netmiko","id":"python-eco-system--software-libraries--netmiko","logo_url":"https://steinzi.com/network-automation-landscape/logos/90d56487f0bf9f7913eabc85d056cfada74e67a37af60dab723a5c3d0432e203.png","name":"Netmiko","subcategory":"Software Libraries","description":"Netmiko is a multi-vendor library to simplify Paramiko SSH connections to network devices. It provides a unified API to connect to various network devices.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/ktbyers/netmiko","languages":{"Jinja":384,"Python":899858,"Shell":21963},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://netutils.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--netutils","logo_url":"https://steinzi.com/network-automation-landscape/logos/efb0abf7b23bc057396af85aea4637c0a4ef0ed31afe159e58a311c865735c5f.png","name":"netutils","subcategory":"Software Libraries","description":"Collection of functions that are used in the common network automation tasks.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/netutils","languages":{"Dockerfile":227,"Jinja":59,"Python":6227797,"TypeScript":816},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://github.com/networktocode/ntc-templates","id":"python-eco-system--software-libraries--ntc-templates","logo_url":"https://steinzi.com/network-automation-landscape/logos/b348f873e80cdd3157d816240ba3b440227fc47c3a4e204805f086689a4844ae.png","name":"NTC Templates","subcategory":"Software Libraries","description":"Repository of TextFSM Templates for Network Devices, and Python wrapper for TextFSM's CliTable. TextFSM is a tool to help make parsing cli commands more manageable.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/ntc-templates","languages":{"Dockerfile":1338,"Python":43586},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://github.com/robshakir/pyangbind","id":"python-eco-system--software-libraries--pyangbind","logo_url":"https://steinzi.com/network-automation-landscape/logos/8cb9e9e0a20bae74c015677adf6702bddb6a2c1a5bff667248ca96828cf2bd40.png","name":"PyangBind","subcategory":"Software Libraries","description":"Pyang plugin to create Python bindings for a YANG model.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/robshakir/pyangbind","languages":{"Python":362155,"Shell":915},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://pydantify.github.io/pydantify/","id":"python-eco-system--software-libraries--pydantify","logo_url":"https://steinzi.com/network-automation-landscape/logos/0808d2249486f468265fa6d93a7443cef864617c1d02e194b36889ec78d48236.svg","name":"pydantify","subcategory":"Software Libraries","description":"Transform YANG models into Pydantic datastructures that can be initialized with config values and serialized.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/pydantify/pydantify","languages":{"Dockerfile":1693,"Makefile":768,"Python":158001},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://pyeapi.readthedocs.io/en/master/index.html","id":"python-eco-system--software-libraries--pyeapi","logo_url":"https://steinzi.com/network-automation-landscape/logos/dce872e7d3f3eebd69921896480078037be0229147a8018df21253b0f96b64f9.png","name":"pyeapi","subcategory":"Software Libraries","description":"The Python Client for eAPI (pyeapi) is a native Python library wrapper around Arista EOS eAPI.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/arista-eosplus/pyeapi","languages":{"Makefile":1806,"Python":793054},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://www.juniper.net/documentation/product/en_US/junos-pyez","id":"python-eco-system--software-libraries--pyez","logo_url":"https://steinzi.com/network-automation-landscape/logos/10ac94ab168145a58a8803135215f9488f6256b90f21f437115e5e56c14c5b20.png","name":"PyEZ","subcategory":"Software Libraries","description":"Juniper PyEZ is a Python library for managing and automating Juniper devices. It provides a Pythonic interface to the NETCONF API and other management interfaces.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/Juniper/py-junos-eznc","languages":{"Dockerfile":872,"Pascal":13,"Puppet":2658,"Python":1168637,"Ruby":134,"Shell":1593},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://github.com/akarneliuk/pygnmi/","id":"python-eco-system--software-libraries--pygnmi","logo_url":"https://steinzi.com/network-automation-landscape/logos/0319da722a93eeaa145acb08be71853f99b7bcd271ca2c268c027d8ec014352f.png","name":"pyGNMI","subcategory":"Software Libraries","description":"Python gNMI client","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/akarneliuk/pygnmi","languages":{"Python":144587},"primary":true}],"youtube_url":"https://www.youtube.com/watch?v=NooE_uHIgys&list=PLsTgo2tBPnTwmeP9zsd8B_tZR-kbguvla"},{"category":"Python Eco-System","homepage_url":"https://network.developer.nokia.com/static/sr/learn/pysros/latest/index.html#","id":"python-eco-system--software-libraries--pysros","logo_url":"https://steinzi.com/network-automation-landscape/logos/f956117532b0c7ae02a137adf94a7fc6f4c6cd99f7b8ddffa0f7750d76ce5ae7.png","name":"PySROS","subcategory":"Software Libraries","description":"The pySROS libraries provide a model-driven management interface for Python developers to integrate with supported Nokia routers running the Service Router Operating System (SR OS).","maturity":"full-open-source","repositories":[{"url":"https://network.developer.nokia.com/static/sr/learn/pysros/latest/introduction.html#installation","primary":true}]},{"category":"Python Eco-System","homepage_url":"https://github.com/carlmontanari/scrapli","id":"python-eco-system--software-libraries--scrapli","logo_url":"https://steinzi.com/network-automation-landscape/logos/2581d6ae5b5fa55410e01b2c6e840772378f445d49abee87239efff564a4960f.svg","name":"Scrapli","subcategory":"Software Libraries","description":"Scrapli is a Python library focused on connecting to network devices (routers/switches/firewalls/etc.) via Telnet or SSH. It aims to be fast, flexible, and easy to use for both synchronous and asynchronous operations.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/carlmontanari/scrapli","languages":{"Jinja":2765,"Makefile":1988,"Python":869114},"primary":true}]},{"category":"Python Eco-System","homepage_url":"https://github.com/dmulyalin/ttp","id":"python-eco-system--software-libraries--ttp","logo_url":"https://steinzi.com/network-automation-landscape/logos/8306ad871551aa9ab6ac4fbf475571251ca442bb8dfa7a4073496f06a160e3f1.png","name":"TTP","subcategory":"Software Libraries","description":"Template Text Parser is a Python library for semi-structured text parsing using templates.","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/dmulyalin/ttp","languages":{"Python":898769},"primary":true}]}]