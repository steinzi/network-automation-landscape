{"github_data":{"https://github.com/CiscoTestAutomation/ncdiff/":{"contributors":{"count":14,"url":"https://github.com/CiscoTestAutomation/ncdiff/graphs/contributors"},"description":"NETCONF Diff Engine","generated_at":"2025-08-01T19:46:13.053651499Z","latest_commit":{"ts":"2025-07-09T14:19:00Z","url":"https://github.com/CiscoTestAutomation/ncdiff/commit/44c5cee60e387531f59590b328294dc72bd4200f"},"participation_stats":[0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,2,3,2,0,2,11,0,0,0,2,1,0,0,0,2,0,0,0],"stars":25,"url":"https://github.com/CiscoTestAutomation/ncdiff","first_commit":{"ts":"2018-05-04T14:38:16Z","url":"https://github.com/CiscoTestAutomation/ncdiff/commit/35ec179f303bc3dc65d334cb274dc99ff45aa8f9"},"languages":{"Makefile":2573,"Python":549387},"license":"Apache License 2.0"},"https://github.com/Juniper/py-junos-eznc":{"contributors":{"count":116,"url":"https://github.com/Juniper/py-junos-eznc/graphs/contributors"},"description":"Python library for Junos automation","generated_at":"2025-08-01T19:46:21.557681045Z","latest_commit":{"ts":"2025-04-30T17:10:11Z","url":"https://github.com/Juniper/py-junos-eznc/commit/b506a95500bd49dce8387a3ed1daabe04a641329"},"participation_stats":[0,1,0,1,2,0,0,0,0,7,18,20,0,0,0,0,3,1,0,0,0,0,0,0,0,3,10,8,3,0,6,0,1,1,1,2,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":697,"topics":["junos-automation","junos-eznc","junos-pyez","netconf","pyez","python"],"url":"https://github.com/Juniper/py-junos-eznc","first_commit":{"ts":"2013-10-12T22:22:50Z","url":"https://github.com/Juniper/py-junos-eznc/commit/b92a6f8fc9df637e03f0b6e06d8498d491cb23aa"},"languages":{"Dockerfile":872,"Pascal":13,"Puppet":2658,"Python":1168637,"Ruby":134,"Shell":1593},"latest_release":{"ts":"2025-04-30T16:13:37Z","url":"https://github.com/Juniper/py-junos-eznc/releases/tag/2.7.4"},"license":"Apache License 2.0"},"https://github.com/akarneliuk/pygnmi":{"contributors":{"count":28,"url":"https://github.com/akarneliuk/pygnmi/graphs/contributors"},"description":"The pure Python implementation of the gNMI client.","generated_at":"2025-08-01T19:46:25.923769365Z","latest_commit":{"ts":"2025-03-10T22:21:02Z","url":"https://github.com/akarneliuk/pygnmi/commit/ccf168a5a80e3611d572cc7bac00ba8600aed47e"},"participation_stats":[1,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":142,"topics":["automation","gnmi","grpc","network","network-automation","pygnmi","python","telemetry"],"url":"https://github.com/akarneliuk/pygnmi","first_commit":{"ts":"2020-09-14T20:25:05Z","url":"https://github.com/akarneliuk/pygnmi/commit/2a8f6ad96748f4a5be4f35b7fa758352a8cc668f"},"languages":{"Python":144587},"latest_release":{"ts":"2025-03-10T22:20:36Z","url":"https://github.com/akarneliuk/pygnmi/releases/tag/v0.8.15"},"license":"BSD 3-Clause \"New\" or \"Revised\" License"},"https://github.com/arista-eosplus/pyeapi":{"contributors":{"count":52,"url":"https://github.com/arista-eosplus/pyeapi/graphs/contributors"},"description":"Python client for Arista eAPI","generated_at":"2025-08-01T19:46:34.699307328Z","latest_commit":{"ts":"2024-12-16T14:01:04Z","url":"https://github.com/arista-eosplus/pyeapi/commit/c8427cc5a4bb82f79cbb3ad2fe00512b3deb2d55"},"participation_stats":[12,4,12,2,0,0,1,4,0,0,0,1,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":147,"url":"https://github.com/arista-eosplus/pyeapi","first_commit":{"ts":"2014-11-19T01:52:42Z","url":"https://github.com/arista-eosplus/pyeapi/commit/73137f02a8096912fa21577c458e1ffd811a9477"},"languages":{"Makefile":1806,"Python":793054},"latest_release":{"ts":"2024-08-20T13:39:33Z","url":"https://github.com/arista-eosplus/pyeapi/releases/tag/v1.0.4"},"license":"BSD 3-Clause \"New\" or \"Revised\" License"},"https://github.com/aristanetworks/avd":{"contributors":{"count":117,"url":"https://github.com/aristanetworks/avd/graphs/contributors"},"description":"Arista AVD: Architect Validate Deploy","generated_at":"2025-08-01T19:46:37.608100706Z","latest_commit":{"ts":"2025-08-01T17:26:25Z","url":"https://github.com/aristanetworks/avd/commit/d76ef14167eeecdf6522bec0793266d50becf307"},"participation_stats":[31,19,14,16,13,11,16,25,19,23,17,9,20,15,23,16,8,9,11,13,5,1,9,16,18,13,22,31,29,31,12,11,20,17,24,20,17,10,24,20,20,19,15,16,23,19,8,19,19,14,7,16],"stars":348,"topics":["ansible","arista","avd","cloudvision","cloudvision-portal","cvp","eapi","eos","jinja2","playbook","python"],"url":"https://github.com/aristanetworks/avd","first_commit":{"ts":"2019-09-10T20:22:24Z","url":"https://github.com/aristanetworks/avd/commit/4d7bf3ea2a9bed5c0ff14af619b5c94b365830de"},"languages":{"Dockerfile":4818,"Jinja":945497,"Makefile":8702,"Python":4061430,"Rust":179904,"Shell":2653},"latest_release":{"ts":"2025-07-07T16:16:26Z","url":"https://github.com/aristanetworks/avd/releases/tag/v5.5.1"},"license":"Apache License 2.0"},"https://github.com/carlmontanari/scrapli":{"contributors":{"count":28,"url":"https://github.com/carlmontanari/scrapli/graphs/contributors"},"description":"Fast, flexible, sync/async, Python 3.9+ screen scraping client specifically for network devices","generated_at":"2025-08-01T19:46:40.508827749Z","latest_commit":{"ts":"2025-07-06T15:37:50Z","url":"https://github.com/carlmontanari/scrapli/commit/e0d0bf20243583c48a23364a9ca2ac126837ddb1"},"participation_stats":[0,1,0,0,0,2,6,1,2,0,8,1,0,0,2,5,0,4,0,0,0,0,0,0,0,0,1,0,2,1,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0],"stars":618,"url":"https://github.com/carlmontanari/scrapli","first_commit":{"ts":"2020-01-27T19:05:41Z","url":"https://github.com/carlmontanari/scrapli/commit/487cef1320f4b531d5554544efe3a18873f56e3e"},"languages":{"Jinja":2765,"Makefile":1988,"Python":869220},"latest_release":{"ts":"2025-01-31T00:46:40Z","url":"https://github.com/carlmontanari/scrapli/releases/tag/2025.01.30"},"license":"MIT License"},"https://github.com/dmulyalin/ttp":{"contributors":{"count":5,"url":"https://github.com/dmulyalin/ttp/graphs/contributors"},"description":"Template Text Parser","generated_at":"2025-08-01T19:46:46.462073679Z","latest_commit":{"ts":"2024-01-31T19:19:16Z","url":"https://github.com/dmulyalin/ttp/commit/d6476d387ca2078e0306c2546148850d3ceb246c"},"participation_stats":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":363,"url":"https://github.com/dmulyalin/ttp","first_commit":{"ts":"2019-10-18T10:34:22Z","url":"https://github.com/dmulyalin/ttp/commit/1dddc309df07baff08d3dbab2b500483f08be363"},"languages":{"Python":898769},"latest_release":{"ts":"2023-06-25T00:31:08Z","url":"https://github.com/dmulyalin/ttp/releases/tag/0.9.5"},"license":"MIT License"},"https://github.com/ktbyers/netmiko":{"contributors":{"count":263,"url":"https://github.com/ktbyers/netmiko/graphs/contributors"},"description":"Multi-vendor library to simplify Paramiko SSH connections to network devices","generated_at":"2025-08-01T19:47:00.152333367Z","latest_commit":{"ts":"2025-07-24T22:26:40Z","url":"https://github.com/ktbyers/netmiko/commit/9c6078c9cf116ee266252ac5bf8cc74f395c7d27"},"participation_stats":[3,0,2,4,4,1,2,1,3,2,0,0,4,2,4,1,2,1,8,2,2,3,7,0,1,0,0,10,8,10,9,19,10,10,32,19,31,8,0,0,0,2,4,8,2,0,14,0,0,1,24,0],"stars":3888,"url":"https://github.com/ktbyers/netmiko","first_commit":{"ts":"2014-11-28T21:42:52Z","url":"https://github.com/ktbyers/netmiko/commit/87bdbe14668b08177b5f0c887856e36c95f7e6be"},"languages":{"Jinja":384,"Python":916812,"Shell":21963},"latest_release":{"ts":"2025-06-26T19:39:15Z","url":"https://github.com/ktbyers/netmiko/releases/tag/v4.6.0"},"license":"MIT License"},"https://github.com/netdevops/hier_config":{"contributors":{"count":13,"url":"https://github.com/netdevops/hier_config/graphs/contributors"},"description":"Hierarchical Configuration","generated_at":"2025-08-01T19:47:10.854896656Z","latest_commit":{"ts":"2025-02-28T01:18:36Z","url":"https://github.com/netdevops/hier_config/commit/2db52ec887b416b3e21c14d7d829cca3386abd6f"},"participation_stats":[0,0,0,0,0,0,1,0,0,0,0,0,0,0,34,59,7,0,7,14,0,0,0,10,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":133,"topics":["configuration-management","network-analysis","network-programming"],"url":"https://github.com/netdevops/hier_config","first_commit":{"ts":"2018-05-11T14:49:59Z","url":"https://github.com/netdevops/hier_config/commit/0bcd4bee6dace0070262a02b7debe0cfc51315eb"},"languages":{"Python":250968},"latest_release":{"ts":"2025-01-14T17:56:40Z","url":"https://github.com/netdevops/hier_config/releases/tag/v3.2.2"},"license":"MIT License"},"https://github.com/networktocode/diffsync":{"contributors":{"count":22,"url":"https://github.com/networktocode/diffsync/graphs/contributors"},"description":"A utility library for comparing and synchronizing different datasets.","generated_at":"2025-08-01T19:47:20.004054031Z","latest_commit":{"ts":"2025-04-23T11:53:00Z","url":"https://github.com/networktocode/diffsync/commit/45df339171c6e81de8028c73d7e3f730095244b8"},"participation_stats":[0,0,1,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":172,"topics":["data-synchronization","diffsync","etl","extract-transform-load","python","source-of-truth","synchronization"],"url":"https://github.com/networktocode/diffsync","first_commit":{"ts":"2020-09-02T13:55:59Z","url":"https://github.com/networktocode/diffsync/commit/4148f9b0ff03a25c6494e9b80cbcfe3415931a75"},"languages":{"Dockerfile":475,"Python":231294},"latest_release":{"ts":"2025-04-25T13:31:41Z","url":"https://github.com/networktocode/diffsync/releases/tag/v2.1.0"},"license":"Other"},"https://github.com/networktocode/netutils":{"contributors":{"count":42,"url":"https://github.com/networktocode/netutils/graphs/contributors"},"description":"Python library that is a collection of functions and objects for common network automation tasks.","generated_at":"2025-08-01T19:47:21.433859218Z","latest_commit":{"ts":"2025-08-01T18:59:37Z","url":"https://github.com/networktocode/netutils/commit/a8810cf6bc0987edc476ad8e4e10f11030e3d62b"},"participation_stats":[4,0,0,0,2,3,7,0,0,0,0,0,0,1,0,0,0,0,0,0,3,3,5,1,0,0,0,0,1,5,0,1,0,0,5,1,1,0,0,3,0,1,0,1,0,0,0,0,0,11,0,5],"stars":238,"url":"https://github.com/networktocode/netutils","first_commit":{"ts":"2021-05-08T12:45:57Z","url":"https://github.com/networktocode/netutils/commit/b5084bfb8b76413ed10399048e07b07ded84e86f"},"languages":{"Dockerfile":944,"Jinja":59,"Python":6257529,"TypeScript":816},"latest_release":{"ts":"2025-07-11T16:06:18Z","url":"https://github.com/networktocode/netutils/releases/tag/v1.14.1"},"license":"Other"},"https://github.com/networktocode/ntc-templates":{"contributors":{"count":287,"url":"https://github.com/networktocode/ntc-templates/graphs/contributors"},"description":"TextFSM templates for parsing show commands of network devices","generated_at":"2025-08-01T19:47:22.923326448Z","latest_commit":{"ts":"2025-07-29T21:44:47Z","url":"https://github.com/networktocode/ntc-templates/commit/04d2df4722a2a44f61146aeffb6845b86bfd08a3"},"participation_stats":[7,15,1,0,6,1,8,8,4,4,12,3,3,2,3,3,9,7,12,5,1,0,17,4,1,1,5,7,26,10,17,29,14,1,4,6,0,4,2,4,4,8,0,1,1,2,6,1,1,0,4,18],"stars":1193,"url":"https://github.com/networktocode/ntc-templates","first_commit":{"ts":"2016-04-27T17:31:51Z","url":"https://github.com/networktocode/ntc-templates/commit/cc61388f3c6e4543b878e426b30420173d6b6bc4"},"languages":{"Dockerfile":1338,"Python":45157},"latest_release":{"ts":"2025-05-21T20:12:11Z","url":"https://github.com/networktocode/ntc-templates/releases/tag/v7.9.0"},"license":"Other"},"https://github.com/pydantify/pydantify":{"contributors":{"count":7,"url":"https://github.com/pydantify/pydantify/graphs/contributors"},"description":"Transform YANG models into pydantic datastructures","generated_at":"2025-08-01T19:47:44.021554277Z","latest_commit":{"ts":"2025-02-11T09:40:27Z","url":"https://github.com/pydantify/pydantify/commit/8cb63a3d36ab715c5b022d1204965f2b5aad1d1c"},"participation_stats":[0,0,0,1,1,3,2,0,0,7,4,7,0,0,0,0,0,0,0,0,0,0,0,0,3,25,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":79,"topics":["automation","hacktoberfest","networking","pydantic","python","yang"],"url":"https://github.com/pydantify/pydantify","first_commit":{"ts":"2022-09-19T19:59:42Z","url":"https://github.com/pydantify/pydantify/commit/8f5de65d8087fdc989da441831749cae51c75ad8"},"languages":{"Dockerfile":1693,"Makefile":768,"Python":158001},"latest_release":{"ts":"2025-02-09T20:41:05Z","url":"https://github.com/pydantify/pydantify/releases/tag/v0.8.0"},"license":"MIT License"},"https://github.com/robshakir/pyangbind":{"contributors":{"count":26,"url":"https://github.com/robshakir/pyangbind/graphs/contributors"},"description":"A plugin for pyang that creates Python bindings for a YANG model.","generated_at":"2025-08-01T19:47:48.227101436Z","latest_commit":{"ts":"2024-09-12T18:18:49Z","url":"https://github.com/robshakir/pyangbind/commit/a4bd3bd1edca5eb72908a73bc391caecc2f0c250"},"participation_stats":[3,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":209,"url":"https://github.com/robshakir/pyangbind","first_commit":{"ts":"2015-04-12T21:04:05Z","url":"https://github.com/robshakir/pyangbind/commit/49ace01f5d5582f324a5d671ffe96fec055aece3"},"languages":{"Python":362155,"Shell":915},"latest_release":{"ts":"2024-08-05T20:26:32Z","url":"https://github.com/robshakir/pyangbind/releases/tag/0.8.6"},"license":"Other"}},"items":[{"category":"Python Eco-System","homepage_url":"https://github.com/carlmontanari/scrapli","id":"python-eco-system--software-libraries--scrapli","logo":"logos/2581d6ae5b5fa55410e01b2c6e840772378f445d49abee87239efff564a4960f.svg","name":"Scrapli","subcategory":"Software Libraries","website":"https://github.com/carlmontanari/scrapli","description":"Scrapli is a Python library focused on connecting to network devices (routers/switches/firewalls/etc.) via Telnet or SSH. It aims to be fast, flexible, and easy to use for both synchronous and asynchronous operations.","documentation_url":"https://carlmontanari.github.io/scrapli/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/carlmontanari/scrapli","primary":true}],"summary":{"personas":["Network Engineers","DevOps Engineers","Network Automation Specialists"],"tags":["network automation","SSH","Telnet","async","Python"],"use_case":"Network device automation, configuration management, data retrieval from network devices"}},{"category":"Python Eco-System","homepage_url":"https://github.com/ktbyers/netmiko","id":"python-eco-system--software-libraries--netmiko","logo":"logos/90d56487f0bf9f7913eabc85d056cfada74e67a37af60dab723a5c3d0432e203.png","name":"Netmiko","subcategory":"Software Libraries","website":"https://github.com/ktbyers/netmiko","description":"Netmiko is a multi-vendor library to simplify Paramiko SSH connections to network devices. It provides a unified API to connect to various network devices.","documentation_url":"https://ktbyers.github.io/netmiko/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/ktbyers/netmiko","primary":true}],"summary":{"personas":["Network Engineers","Network Automation Engineers"],"tags":["network automation","SSH","multi-vendor","Python"],"use_case":"Network device connection and configuration, multi-vendor support"}},{"category":"Python Eco-System","homepage_url":"https://www.juniper.net/documentation/product/en_US/junos-pyez","id":"python-eco-system--software-libraries--pyez","logo":"logos/10ac94ab168145a58a8803135215f9488f6256b90f21f437115e5e56c14c5b20.png","name":"PyEZ","subcategory":"Software Libraries","website":"https://www.juniper.net/documentation/product/en_US/junos-pyez","description":"Juniper PyEZ is a Python library for managing and automating Juniper devices. It provides a Pythonic interface to the NETCONF API and other management interfaces.","documentation_url":"https://www.juniper.net/documentation/product/en_US/junos-pyez","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/Juniper/py-junos-eznc","primary":true}],"summary":{"personas":["Network Engineers","Juniper Specialists","Automation Engineers"],"tags":["Juniper","network automation","NETCONF","Python"],"use_case":"Juniper device automation, configuration management, operational state retrieval"}},{"category":"Python Eco-System","homepage_url":"https://pyeapi.readthedocs.io/en/master/index.html","id":"python-eco-system--software-libraries--pyeapi","logo":"logos/dce872e7d3f3eebd69921896480078037be0229147a8018df21253b0f96b64f9.png","name":"pyeapi","subcategory":"Software Libraries","website":"https://pyeapi.readthedocs.io/en/master/index.html","description":"The Python Client for eAPI (pyeapi) is a native Python library wrapper around Arista EOS eAPI.","documentation_url":"https://pyeapi.readthedocs.io/en/master/index.html","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/arista-eosplus/pyeapi","primary":true}],"summary":{"personas":["Network Engineers","Arista Specialists","Automation Engineers"],"tags":["Arista","network automation","eAPI","Python"],"use_case":"Arista device automation, configuration management, operational state retrieval"}},{"category":"Python Eco-System","homepage_url":"https://github.com/networktocode/ntc-templates","id":"python-eco-system--software-libraries--ntc-templates","logo":"logos/b348f873e80cdd3157d816240ba3b440227fc47c3a4e204805f086689a4844ae.png","name":"NTC Templates","subcategory":"Software Libraries","website":"https://github.com/networktocode/ntc-templates","description":"Repository of TextFSM Templates for Network Devices, and Python wrapper for TextFSM's CliTable. TextFSM is a tool to help make parsing cli commands more manageable.","documentation_url":"https://ntc-templates.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/ntc-templates","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["TextFSM","multi-vendor","CLI","Python"],"use_case":"Parsing outputs from network devices"}},{"category":"Python Eco-System","homepage_url":"https://github.com/dmulyalin/ttp","id":"python-eco-system--software-libraries--ttp","logo":"logos/8306ad871551aa9ab6ac4fbf475571251ca442bb8dfa7a4073496f06a160e3f1.png","name":"TTP","subcategory":"Software Libraries","website":"https://github.com/dmulyalin/ttp","description":"Template Text Parser is a Python library for semi-structured text parsing using templates.","documentation_url":"https://ttp.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/dmulyalin/ttp","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["screen-scraping","parsing","Python","template"],"use_case":"Parsing outputs from semi-structured text"}},{"category":"Python Eco-System","homepage_url":"https://netutils.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--netutils","logo":"logos/efb0abf7b23bc057396af85aea4637c0a4ef0ed31afe159e58a311c865735c5f.png","name":"netutils","subcategory":"Software Libraries","website":"https://netutils.readthedocs.io/en/latest/","description":"Collection of functions that are used in the common network automation tasks.","documentation_url":"https://netutils.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/netutils","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","helper functions","jinja template"],"use_case":"Tasks such as converting a BGP ASN to and from dotted format, normalizing an interface name, or 'type 5' encrypting a password."}},{"category":"Python Eco-System","homepage_url":"https://ncclient.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--ncclient","logo":"logos/614426f2d90e234bbe4302ab8f1bd79748e1eecc08020846c51b985d1b052fb1.webp","name":"ncclient","subcategory":"Software Libraries","website":"https://ncclient.readthedocs.io/en/latest/","description":"ncclient is a Python library that facilitates client-side scripting and application development around the NETCONF protocol.","documentation_url":"https://ncclient.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/netutils","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","netconf"],"use_case":"NETCONF client to interact with network devices with NETCONF RPCs"}},{"category":"Python Eco-System","homepage_url":"https://diffsync.readthedocs.io/en/latest/index.html","id":"python-eco-system--software-libraries--diffsync","logo":"logos/aace2c73b9323ac1ea4326e4bb08af42217f34f7d0784dd994eae913d3ff373d.png","name":"DiffSync","subcategory":"Software Libraries","website":"https://diffsync.readthedocs.io/en/latest/index.html","description":"DiffSync is a utility library that can be used to compare and synchronize different datasets.","documentation_url":"https://diffsync.readthedocs.io/en/latest/index.html","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networktocode/diffsync","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","datasets","diff","ssot"],"use_case":"DiffSync is at its most useful when you have multiple sources or sets of data to compare and/or synchronize"}},{"category":"Python Eco-System","homepage_url":"https://diffsync.readthedocs.io/en/latest/index.html","id":"python-eco-system--software-libraries--ncdiff","logo":"logos/e4ba069e5dd443c224011a82ac94d3b0b5519cd73b8baf1824dc9365fb6bfb0a.png","name":"ncdiff","subcategory":"Software Libraries","website":"https://diffsync.readthedocs.io/en/latest/index.html","description":"Extended ncclient NETCONF client with diff capabilities.","documentation_url":"https://ncdiff.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/CiscoTestAutomation/ncdiff/","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","diff","netconf"],"use_case":"Send and get NETCONF RPCs and diff, combine or pedict configurations"}},{"category":"Python Eco-System","homepage_url":"https://github.com/akarneliuk/pygnmi/","id":"python-eco-system--software-libraries--pygnmi","logo":"logos/0319da722a93eeaa145acb08be71853f99b7bcd271ca2c268c027d8ec014352f.png","name":"pyGNMI","subcategory":"Software Libraries","website":"https://github.com/akarneliuk/pygnmi/","description":"Python gNMI client","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/akarneliuk/pygnmi","primary":true}],"summary":{"personas":["Network Engineers","SREs","Network Automation Specialists"],"tags":["gNMI","network automation","telemetry","Python"],"use_case":"gNMI-based network device management, telemetry collection"},"youtube_url":"https://www.youtube.com/watch?v=NooE_uHIgys&list=PLsTgo2tBPnTwmeP9zsd8B_tZR-kbguvla"},{"category":"Python Eco-System","homepage_url":"https://github.com/robshakir/pyangbind","id":"python-eco-system--software-libraries--pyangbind","logo":"logos/8cb9e9e0a20bae74c015677adf6702bddb6a2c1a5bff667248ca96828cf2bd40.png","name":"PyangBind","subcategory":"Software Libraries","website":"https://github.com/robshakir/pyangbind","description":"Pyang plugin to create Python bindings for a YANG model.","documentation_url":"https://github.com/robshakir/pyangbind/blob/master/docs/README.md","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/robshakir/pyangbind","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","yang","bindings"],"use_case":"PyangBind converts YANG models into Python classes, enabling easy programmatic interaction with network configurations for automation and management."}},{"category":"Python Eco-System","homepage_url":"https://pydantify.github.io/pydantify/","id":"python-eco-system--software-libraries--pydantify","logo":"logos/0808d2249486f468265fa6d93a7443cef864617c1d02e194b36889ec78d48236.svg","name":"pydantify","subcategory":"Software Libraries","website":"https://pydantify.github.io/pydantify/","description":"Transform YANG models into Pydantic datastructures that can be initialized with config values and serialized.","documentation_url":"https://pydantify.github.io/pydantify/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/pydantify/pydantify","primary":true}],"summary":{"personas":["Network Engineers","Automation Engineers"],"tags":["python","yang","bindings","netconf","restconf","pydantic","model"],"use_case":"Pydantify enables seamless conversion of YANG models into Pydantic data structures, allowing for easy initialization, validation, and serialization of network configuration data in a Pythonic way."}},{"category":"Python Eco-System","homepage_url":"https://network.developer.nokia.com/static/sr/learn/pysros/latest/index.html#","id":"python-eco-system--software-libraries--pysros","logo":"logos/f956117532b0c7ae02a137adf94a7fc6f4c6cd99f7b8ddffa0f7750d76ce5ae7.png","name":"PySROS","subcategory":"Software Libraries","website":"https://network.developer.nokia.com/static/sr/learn/pysros/latest/index.html#","description":"The pySROS libraries provide a model-driven management interface for Python developers to integrate with supported Nokia routers running the Service Router Operating System (SR OS).","documentation_url":"https://network.developer.nokia.com/static/sr/learn/pysros/latest/index.html#","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","repositories":[{"url":"https://network.developer.nokia.com/static/sr/learn/pysros/latest/introduction.html#installation","primary":true}],"summary":{"personas":["Network Engineers","Nokia Specialists","Automation Engineers"],"tags":["Nokia","network automation","NETCONF","Python"],"use_case":"Nokia device automation, configuration management, operational state retrieval"}},{"category":"Python Eco-System","homepage_url":"https://hier-config.readthedocs.io/en/latest/","id":"python-eco-system--software-libraries--hierarchical-configuration","logo":"logos/c55ce18fc6119d77d3e9861372fe4ac81573eec2b47acb95f4dfab493aa7a53f.svg","name":"Hierarchical Configuration","subcategory":"Software Libraries","website":"https://hier-config.readthedocs.io/en/latest/","description":"Query and compare network device configurations. Build remediation and rollback configs too.","documentation_url":"https://hier-config.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/netdevops/hier_config","primary":true}],"summary":{"business_use_case":"Build remediation configurations to power network configuration compliance workflows.","personas":["Network Engineers","Automation Engineers"],"tags":["config","query","remediation","rollback"],"use_case":"Load network device running and generated configs. Then, build remediation and rollback configs."}},{"category":"Python Eco-System","homepage_url":"https://avd.arista.com","id":"python-eco-system--software-libraries--avd","logo":"logos/0db22a0d8a7c0338276422ef9ddb67dd94c541e5379c45aea710c812555f64ff.png","name":"AVD","subcategory":"Software Libraries","website":"https://avd.arista.com","description":"AVD (Arista Validated Designs) is an Ansible collection that can be used also as a python standalone library (PyAVD) developed by Arista Networks. It provides a set of roles and modules to automate the deployment and management of Arista EOS-based network infrastructures.","documentation_url":"https://avd.arista.com","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/aristanetworks/avd","primary":true}],"summary":{"personas":["Network Engineers","DevOps Engineers","Network Automation Specialists","Software Engineers"],"tags":["network automation","SSH","gNMI","Python","Ansible"],"use_case":"Network device automation, configuration management, IaC, declarative configuration"}}]}