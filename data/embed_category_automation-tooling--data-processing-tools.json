{"classification":{"category":{"name":"Automation Tooling","normalized_name":"automation-tooling","subcategories":[{"name":"Data Processing Tools","normalized_name":"data-processing-tools"}]}},"foundation":"Network Automation Landscape","items":[{"category":"Automation Tooling","id":"automation-tooling--data-processing-tools--yq","name":"yq","logo":"logos/0b8a4ee229cf3d032f79dc9dd271aaa2941676356818bb98d138cb4a62da1557.svg","subcategory":"Data Processing Tools","website":"https://github.com/mikefarah/yq","description":"yq is a portable command-line YAML, JSON, XML, CSV and properties processor. It's written in Go and works seamlessly across platforms with consistent, intuitive syntax for data manipulation and transformation.","maturity":"full-open-source","primary_repository_url":"https://github.com/mikefarah/yq"},{"category":"Automation Tooling","id":"automation-tooling--data-processing-tools--jq","name":"jq","logo":"logos/3660093287ff23cb3fade2ec2a14e63df019139562d4d7b63de94d933a244de8.svg","subcategory":"Data Processing Tools","website":"https://jqlang.github.io/jq/","description":"jq is a lightweight and flexible command-line JSON processor. It's like sed for JSON data - you can use it to slice and filter and map and transform structured data with the same ease that sed, awk, grep give you for text.","maturity":"full-open-source","primary_repository_url":"https://github.com/jqlang/jq"}]}