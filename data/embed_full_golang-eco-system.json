{"github_data":{"https://github.com/networklore/netrasp":{"contributors":{"count":3,"url":"https://github.com/networklore/netrasp/graphs/contributors"},"description":"","generated_at":"2024-12-02T09:03:27.409613012Z","latest_commit":{"ts":"2021-04-23T05:58:11Z","url":"https://github.com/networklore/netrasp/commit/2a6631e4fc36003ee4937decf21e9f3d4276f324"},"participation_stats":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":70,"url":"https://github.com/networklore/netrasp","first_commit":{"ts":"2021-02-28T13:14:35Z","url":"https://github.com/networklore/netrasp/commit/db8bb6544c7d13e619c4fb51b9b522103fd8ede8"},"languages":{"Go":30389},"license":"Apache License 2.0"},"https://github.com/nornir-automation/gornir":{"contributors":{"count":5,"url":"https://github.com/nornir-automation/gornir/graphs/contributors"},"description":"","generated_at":"2024-12-02T09:03:31.731590785Z","latest_commit":{"ts":"2023-12-19T09:08:10Z","url":"https://github.com/nornir-automation/gornir/commit/d18c3660bcae92c68e70f9cb6c8c3e6b557f3390"},"participation_stats":[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":156,"url":"https://github.com/nornir-automation/gornir","first_commit":{"ts":"2019-06-01T07:27:12Z","url":"https://github.com/nornir-automation/gornir/commit/02314caac12359570f22af0bfe18e59dfed28089"},"languages":{"Dockerfile":176,"Go":56762,"Makefile":2781},"license":"Apache License 2.0"},"https://github.com/openconfig/gnmic":{"contributors":{"count":42,"url":"https://github.com/openconfig/gnmic/graphs/contributors"},"description":"gNMIc is a gNMI CLI client and collector","generated_at":"2024-12-02T09:03:34.020056993Z","latest_commit":{"ts":"2024-11-25T15:03:56Z","url":"https://github.com/openconfig/gnmic/commit/13a5f9e10f1062298ff3072fddc0faf537131636"},"participation_stats":[6,6,10,6,22,12,18,7,2,6,10,0,5,13,8,3,4,0,0,3,25,7,8,7,3,0,0,3,9,3,8,7,6,4,11,2,2,0,1,1,0,0,0,0,0,0,1,0,27,2,0,1],"stars":194,"topics":["gnmi","telemetry"],"url":"https://github.com/openconfig/gnmic","first_commit":{"ts":"2020-02-20T13:15:44Z","url":"https://github.com/openconfig/gnmic/commit/8315335792e9a5b4352f71c9201e9ea88c1e46f1"},"languages":{"Dockerfile":2208,"Go":1555679,"Shell":65472,"Smarty":102},"latest_release":{"ts":"2024-11-11T15:59:44Z","url":"https://github.com/openconfig/gnmic/releases/tag/v0.39.1"},"license":"Apache License 2.0"},"https://github.com/openconfig/ygot":{"contributors":{"count":33,"url":"https://github.com/openconfig/ygot/graphs/contributors"},"description":"A YANG-centric Go toolkit - Go/Protobuf Code Generation; Validation; Marshaling/Unmarshaling","generated_at":"2024-12-02T09:03:37.251775997Z","latest_commit":{"ts":"2024-08-05T01:09:16Z","url":"https://github.com/openconfig/ygot/commit/100bd44fc21215ffcc4862f37d90f7c257b5fa2b"},"participation_stats":[0,1,1,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"stars":286,"topics":["code-generation","network-management","openconfig","protobuf3","streaming-telemetry","telemetry","yang-modules"],"url":"https://github.com/openconfig/ygot","first_commit":{"ts":"2017-08-15T16:47:19Z","url":"https://github.com/openconfig/ygot/commit/0ee5916ffe8ffe906542281d02554ca3fbda714f"},"languages":{"Go":92362442,"Makefile":657,"Shell":12606},"latest_release":{"ts":"2024-07-23T16:55:22Z","url":"https://github.com/openconfig/ygot/releases/tag/v0.29.20"},"license":"Apache License 2.0"},"https://github.com/scrapli/scrapligo":{"contributors":{"count":25,"url":"https://github.com/scrapli/scrapligo/graphs/contributors"},"description":"scrapli, but in go!","generated_at":"2024-12-02T09:03:51.802359402Z","latest_commit":{"ts":"2024-11-25T19:53:19Z","url":"https://github.com/scrapli/scrapligo/commit/d216749f27ad25c5e17bc7eaccea691705bd6306"},"participation_stats":[2,0,0,0,2,0,2,0,0,2,0,0,2,0,0,0,1,12,3,6,1,2,0,0,0,1,0,2,2,0,0,0,0,0,0,0,8,0,0,0,2,0,3,0,10,4,0,0,2,1,0,1],"stars":259,"url":"https://github.com/scrapli/scrapligo","first_commit":{"ts":"2021-05-18T22:12:11Z","url":"https://github.com/scrapli/scrapligo/commit/183d2e073927c9beefee0fa6611b1a5d1a66d71b"},"languages":{"Go":409276,"Makefile":1274},"latest_release":{"ts":"2024-11-11T16:11:11Z","url":"https://github.com/scrapli/scrapligo/releases/tag/v1.3.3"},"license":"MIT License"}},"items":[{"category":"GoLang Eco-System","homepage_url":"https://github.com/nornir-automation/gornir","id":"golang-eco-system--network-programmability-frameworks--gornir","logo":"logos/e908df5457a43da3a126861a09f17e707562e2f8e6ec34e4df9fcd407f6cad9d.jpg","name":"gornir","subcategory":"Network Programmability Frameworks","website":"https://github.com/nornir-automation/gornir","blog_url":"https://nornir.tech/nornir/","description":"Gornir is a pluggable framework with inventory management to help operate collections of devices. It's similar to nornir but in golang.","documentation_url":"https://pkg.go.dev/github.com/nornir-automation/gornir","featured":{"label":"Full Open Source","order":1},"github_discussions_url":"https://github.com/nornir-automation/gornir/discussions","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/nornir-automation/gornir","primary":true}],"summary":{"business_use_case":"Enables efficient and scalable network automation, reducing manual tasks and improving network management productivity","personas":["Network Engineers","DevOps Engineers","Network Automation Specialists"],"release_rate":"Yearly releases","tags":["network automation","GoLang","multi-threading","inventory management","plugin system"],"use_case":"Rapid network data collection, configuration deployment, custom automation workflows"}},{"category":"GoLang Eco-System","homepage_url":"https://github.com/scrapli/scrapligo","id":"golang-eco-system--software-libraries--scrapligo","logo":"logos/d65e3ad94b934730b1e76d8b0a09c7e45c4e377edc3947deb2120ade2dc44070.svg","name":"ScrapliGo","subcategory":"Software Libraries","website":"https://github.com/scrapli/scrapligo","description":"Scrapligo is a Go library focused on connecting to devices, specifically network devices (routers/switches/firewalls/etc.) via SSH and NETCONF.","documentation_url":"https://pkg.go.dev/github.com/scrapli/scrapligo","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/scrapli/scrapligo","primary":true}],"summary":{"personas":["Network Engineers","DevOps Engineers","Network Automation Specialists"],"tags":["network automation","SSH","NETCONF"],"use_case":"Network device automation, configuration management, data retrieval from network devices"}},{"category":"GoLang Eco-System","homepage_url":"https://gnmic.openconfig.net/","id":"golang-eco-system--software-libraries--gnmic","logo":"logos/26f3e7770e2c63816e78c640d5c2c0cf9d726f613d14432e09f224980bee31df.svg","name":"gNMIc","subcategory":"Software Libraries","website":"https://gnmic.openconfig.net/","description":"gNMIc is a gNMI-focused software suite that provides a CLI client, a Go API for gNMI and a streaming telemetry collector implementation.","documentation_url":"https://gnmic.openconfig.net/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/openconfig/gnmic","primary":true}],"summary":{"personas":["Network Engineers","SREs","Network Automation Specialists"],"tags":["gNMI","network automation","telemetry","Go"],"use_case":"gNMI-based network device management, telemetry collection"}},{"category":"GoLang Eco-System","homepage_url":"https://github.com/openconfig/ygot","id":"golang-eco-system--software-libraries--ygot","logo":"logos/09f24de966f974bcb32020364c7f66e60447930322240b79344ccbcd93432856.png","name":"ygot","subcategory":"Software Libraries","website":"https://github.com/openconfig/ygot","description":"A YANG-centric Go toolkit - Go/Protobuf Code Generation; Validation; Marshaling/Unmarshaling","documentation_url":"https://gnmic.openconfig.net/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/openconfig/ygot","primary":true}],"summary":{"personas":["Network Engineers","Network Automation Specialists"],"tags":["gNMI","network automation","Go","protobuf","yang"],"use_case":"Conversion of YANG models into Go and Protobuf code, enabling efficient network configuration management, validation, and telemetry collection in Go-based environments."}},{"category":"GoLang Eco-System","homepage_url":"https://github.com/networklore/netrasp","id":"golang-eco-system--software-libraries--netrasp","logo":"logos/018b28bcbe8b83d112c1d0f6dae23234144be106dd1c67fcda584ef321062b09.png","name":"netrasp","subcategory":"Software Libraries","website":"https://github.com/networklore/netrasp","description":"Netrasp is a package that communicates to network devices over SSH. It takes care of handling the pty terminal of network devices giving you an API with common actions such as executing commands and configuring devices.","documentation_url":"https://networklore.com/hello-netrasp/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/networklore/netrasp","primary":true}],"summary":{"personas":["Network Engineers","Network Automation Engineers"],"tags":["network automation","SSH","multi-vendor","Go"],"use_case":"Network device connection and configuration, multi-vendor support"}}]}