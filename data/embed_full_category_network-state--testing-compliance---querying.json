{"github_data":{"https://github.com/CiscoTestAutomation/pyats":{"contributors":{"count":27,"url":"https://github.com/CiscoTestAutomation/pyats/graphs/contributors"},"description":"Cisco DevNet pyATS Test Framework Bug Tracker","generated_at":"2025-05-21T22:48:04.901000356Z","latest_commit":{"ts":"2025-04-30T21:18:49Z","url":"https://github.com/CiscoTestAutomation/pyats/commit/7ed0b1f38081e786b60aa8eb4d473f1b47edb1bd"},"participation_stats":[1,1,0,0,1,1,0,4,0,2,2,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,2,1,0,8,2,1,0,0,3,0,0,0,2,1,0,0],"stars":156,"topics":["automation-framework","cisco","devnet","infrastructure","netdevops","network-automation","pyats","test-automation-framework"],"url":"https://github.com/CiscoTestAutomation/pyats","first_commit":{"ts":"2017-12-14T20:17:37Z","url":"https://github.com/CiscoTestAutomation/pyats/commit/82413a261c7df40f145bb8d4b8ce3a9b9bb83378"},"languages":{},"latest_release":{"ts":"2024-10-01T14:55:32Z","url":"https://github.com/CiscoTestAutomation/pyats/releases/tag/v24.9"},"license":"Apache License 2.0"},"https://github.com/aristanetworks/anta":{"contributors":{"count":26,"url":"https://github.com/aristanetworks/anta/graphs/contributors"},"description":"What do you call an ant with frogs legs?","generated_at":"2025-05-21T22:48:23.235730653Z","latest_commit":{"ts":"2025-05-20T12:25:24Z","url":"https://github.com/aristanetworks/anta/commit/0b6b9b579762daa84e745e9f0890582c5761e3ed"},"participation_stats":[1,0,16,4,4,6,16,0,3,3,0,1,8,3,11,4,5,3,7,2,12,2,3,8,6,4,3,7,4,8,15,1,5,12,10,4,4,15,4,9,7,17,13,9,4,6,7,4,7,2,9,5],"stars":66,"topics":["anta","arista","arista-automation","arista-networks","automation","network-automation","network-test","network-test-automation","network-testing","network-validation","network-verification","nrfu","pytest","test-automation"],"url":"https://github.com/aristanetworks/anta","first_commit":{"ts":"2022-02-07T16:18:29Z","url":"https://github.com/aristanetworks/anta/commit/9130e5939ab545dc4f53b984416f934c7e84176b"},"languages":{"Dockerfile":2029,"Jinja":105,"Python":2253875,"Shell":324},"latest_release":{"ts":"2025-05-14T13:55:12Z","url":"https://github.com/aristanetworks/anta/releases/tag/v1.4.0"},"license":"Apache License 2.0"},"https://github.com/batfish/batfish":{"contributors":{"count":80,"url":"https://github.com/batfish/batfish/graphs/contributors"},"description":"Batfish is a network configuration analysis tool that can find bugs and guarantee the correctness of (planned or current) network configurations. It enables network engineers to rapidly and safely evolve their network, without fear of outages or security breaches.","generated_at":"2025-05-21T22:48:25.973924147Z","latest_commit":{"ts":"2025-05-21T21:27:13Z","url":"https://github.com/batfish/batfish/commit/7f580d21548595354ededc1a633ed177a86ae2d0"},"participation_stats":[6,23,16,8,7,6,17,1,6,6,13,20,8,2,13,2,22,6,8,11,7,7,5,1,7,10,11,2,0,5,0,0,4,3,4,7,7,3,2,2,5,2,6,6,12,5,8,5,8,7,8,9],"stars":1237,"topics":["configuration","configuration-analysis","configuration-parser","network","network-analysis","network-automation","network-security","network-validation","network-verification"],"url":"https://github.com/batfish/batfish","first_commit":{"ts":"2014-05-29T19:15:33Z","url":"https://github.com/batfish/batfish/commit/88fe75ea2366cbf472adfac9d23684d447d23a13"},"languages":{"ANTLR":2027171,"HCL":49266,"Java":26826396,"Python":11181,"Shell":6823,"Starlark":242046},"latest_release":{"ts":"2024-07-10T18:01:23Z","url":"https://github.com/batfish/batfish/releases/tag/v2024.07.10"},"license":"Apache License 2.0"},"https://github.com/netenglabs/suzieq":{"contributors":{"count":32,"url":"https://github.com/netenglabs/suzieq/graphs/contributors"},"description":"Using network observability to operate and design healthier networks","generated_at":"2025-05-21T22:48:52.947405554Z","latest_commit":{"ts":"2025-05-09T12:32:35Z","url":"https://github.com/netenglabs/suzieq/commit/584b22abb1d66f8cb50da76f35f0522b1607bff7"},"participation_stats":[45,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,4,0,5,9,2,0,0,0,0,0,0,0,0,4,9,0],"stars":821,"topics":["data-center","datacenter","infrastructure","network-analysis","network-monitoring","network-validation","networking","python"],"url":"https://github.com/netenglabs/suzieq","first_commit":{"ts":"2020-01-07T14:11:10Z","url":"https://github.com/netenglabs/suzieq/commit/bae56ef39cf61902457791b7465389173f1106bb"},"languages":{"Dockerfile":1053,"Python":1666572,"Shell":8026},"latest_release":{"ts":"2025-05-09T15:23:08Z","url":"https://github.com/netenglabs/suzieq/releases/tag/v0.24.0"},"license":"Apache License 2.0"},"https://github.com/network-unit-testing-system/nuts":{"contributors":{"count":16,"url":"https://github.com/network-unit-testing-system/nuts/graphs/contributors"},"description":"NUTS defines a desired network state and checks it against a real network using pytest and nornir.","generated_at":"2025-05-21T22:48:56.000110774Z","latest_commit":{"ts":"2025-05-10T11:06:04Z","url":"https://github.com/network-unit-testing-system/nuts/commit/cb0aa4bc70688e1f6faa919d6d6eb06dac59cc66"},"participation_stats":[7,0,6,0,0,0,12,23,3,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,3,0,0,0,0,0,0,0,0,0,0,0,1,0,0,7,5,0],"stars":133,"topics":["automation","hacktoberfest","network-programming","networking","nornir","pytest","python","testing"],"url":"https://github.com/network-unit-testing-system/nuts","first_commit":{"ts":"2020-10-20T09:25:35Z","url":"https://github.com/network-unit-testing-system/nuts/commit/4910653551e2fb9e90274cb88a90dc17e323758b"},"languages":{"Dockerfile":399,"Python":216555,"Roff":1200,"Shell":398},"latest_release":{"ts":"2025-05-10T11:06:47Z","url":"https://github.com/network-unit-testing-system/nuts/releases/tag/v3.5.0"},"license":"MIT License"},"https://github.com/openconfig/ondatra":{"contributors":{"count":6,"url":"https://github.com/openconfig/ondatra/graphs/contributors"},"description":"","generated_at":"2025-05-21T22:49:08.379755674Z","latest_commit":{"ts":"2025-05-13T21:25:39Z","url":"https://github.com/openconfig/ondatra/commit/92206fefeab8a346921bbec48fef3366ad124019"},"participation_stats":[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,1,3,0,0,0,0,0,1,1,0],"stars":60,"url":"https://github.com/openconfig/ondatra","first_commit":{"ts":"2021-06-01T23:43:35Z","url":"https://github.com/openconfig/ondatra/commit/4f446e90ffdbb16a84f6f105c6f882897a4db72e"},"languages":{"Go":83758529,"Shell":11688},"latest_release":{"ts":"2025-05-13T21:29:57Z","url":"https://github.com/openconfig/ondatra/releases/tag/v0.9.1"}}},"items":[{"category":"Network state","homepage_url":"https://www.suzieq.io/","id":"network-state--testing-compliance---querying--suzieq","logo":"logos/93ca0a0e3c703bb44c6404c21a613eeef875bbda55987bd0d3ee12f2509cf6d7.png","name":"SuzieQ","subcategory":"Testing, Compliance & Querying","website":"https://www.suzieq.io/","blog_url":"https://www.stardustsystems.net/blog","description":"An open-source, multivendor network observability platform for cloud-first networks.","documentation_url":"https://suzieq.readthedocs.io/en/latest/","featured":{"label":"Freemium (Limited Free Version)","order":3},"maturity":"freemium","oss":true,"repositories":[{"url":"https://github.com/netenglabs/suzieq","primary":true}],"summary":{"business_use_case":"Improves network reliability and reduces downtime by providing deep insights into network state and behavior","integration":"Supports various network operating systems and cloud platforms","personas":["Network Engineers","Cloud Architects","DevOps Engineers"],"release_rate":"yearly updates","tags":["network observability","multivendor","agentless","cloud-first","network state analysis"],"use_case":"Provides comprehensive network state analysis, troubleshooting, change validation, and intent verification for multivendor networks"}},{"category":"Network state","homepage_url":"https://netpicker.io","id":"network-state--testing-compliance---querying--netpicker","logo":"logos/87bc632804d57ffdc69a33bef959f60dbb54026e4d20637a3a2932ed61c09c98.png","name":"Netpicker","subcategory":"Testing, Compliance & Querying","website":"https://netpicker.io","description":"Test the design, security and compliance of your network, A Python-based testing platform for your network","documentation_url":"https://netpicker.io/documentation/","featured":{"label":"Freemium (Limited Free Version)","order":3},"maturity":"freemium","summary":{"business_use_case":"Enhances network security and compliance while reducing manual configuration errors","integration":"Netbox, Slurpit","personas":["Network Engineers","Security Analysts","Compliance Officers"],"release_rate":"Regularly updated","tags":["network testing","device_backup","change-validation","compliance","configuration security"],"use_case":"[free 10 device Shenanigans licence] Network configuration testing, Configuration backups and compliance with a hardening config and security angle. Needs 3rd party discovery tool or manual add devices"}},{"category":"Network state","homepage_url":"https://www.batfish.org/","id":"network-state--testing-compliance---querying--batfish","logo":"logos/432bd5e7034140a460c597bf8c7b50976eca8a8778ca80c54c91d68b606af43e.png","name":"Batfish","subcategory":"Testing, Compliance & Querying","website":"https://www.batfish.org/","description":"A network configuration analysis tool that builds a mathematical model of network behavior, allowing for advanced querying and validation.","documentation_url":"https://pybatfish.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/batfish/batfish","primary":true}],"summary":{"business_use_case":"Reduces network outages and security vulnerabilities by catching misconfigurations before deployment","integration":"Ansible, Terraform, CI/CD pipelines","tags":["network analysis","configuration validation","security policy checking","troubleshooting"],"use_case":"Performs network configuration analysis, validation, and troubleshooting without the need for live network access"}},{"category":"Network state","homepage_url":"https://anta.arista.com/stable/","id":"network-state--testing-compliance---querying--anta","logo":"logos/d0ef608e9418d635b26d39ec3d7769c70e04cc3c4ca31486ef411e22e0c57805.png","name":"anta","subcategory":"Testing, Compliance & Querying","website":"https://anta.arista.com/stable/","description":"Arista Network Test Automation (ANTA) Framework is a Python framework that automates tests for Arista devices.","documentation_url":"https://anta.arista.com/stable/","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/aristanetworks/anta","primary":true}],"summary":{"business_use_case":"Improves network reliability and reduces operational costs by automating the testing and validation of Arista network infrastructures","integration":"Integrates with Arista EOS (Extensible Operating System) and supports various testing scenarios","personas":["Network Engineers","DevOps Engineers","Test Engineers","Arista Network Administrators"],"release_rate":"Regularly updated with new features and improvements","tags":["network automation","testing","Arista","Python","network validation"],"use_case":"Provides a Python-based framework for automating tests on Arista network devices, enabling efficient validation of network configurations and operations"}},{"category":"Network state","homepage_url":"https://github.com/openconfig/ondatra","id":"network-state--testing-compliance---querying--ondatra","logo":"logos/d270f0443cf342068a85672280e27bf56b9cbc3d6eb43a7d68f3d9931433db5e.png","name":"Ondatra","subcategory":"Testing, Compliance & Querying","website":"https://github.com/openconfig/ondatra","description":"Ondatra (Open Network Device Automated Test Runner and API) is a framework for writing and running tests against both real and containerized network devices.","documentation_url":"https://pkg.go.dev/github.com/openconfig/ondatra","featured":{"label":"Full Open Source","order":1},"maturity":"full-open-source","repositories":[{"url":"https://github.com/openconfig/ondatra","primary":true}],"summary":{"business_use_case":"Improves network reliability and reduces time-to-market for network changes by facilitating comprehensive automated testing","integration":"Compatible with OpenConfig data models and various network device platforms","personas":["Network Engineers","DevOps Engineers","Test Engineers"],"release_rate":"Actively maintained and updated","tags":["network testing","automation","GoLang","OpenConfig","containerized testing"],"use_case":"Enables writing and running automated tests for network devices, supporting both physical and containerized environments"}},{"category":"Network state","homepage_url":"https://developer.cisco.com/pyats/","id":"network-state--testing-compliance---querying--pyats","logo":"logos/12ba4c3850179c2caf9bf858d8a783cea7dcf2435426a66012d98bd9b69dd980.png","name":"pyATS","subcategory":"Testing, Compliance & Querying","website":"https://developer.cisco.com/pyats/","blog_url":"https://blogs.cisco.com/tag/pyats","description":"Cisco pyATS is a Network Test and Automation Solution with a closed-source core and open-source extensions. The core framework is available in binary format, while related packages like Unicon plugins are fully open source.","documentation_url":"https://developer.cisco.com/docs/pyats/","featured":{"label":"Closed Core (Closed Core with Open Extensions)","order":14},"maturity":"closed-core","oss":true,"repositories":[{"url":"https://github.com/CiscoTestAutomation/pyats","primary":true}],"summary":{"business_use_case":"Accelerates network testing and validation processes, reducing time-to-market for network changes and improving overall network reliability","integration":"Integrates with various Cisco platforms and supports multi-vendor environments","personas":["Network Engineers","DevOps Engineers","Test Engineers"],"release_rate":"Regularly updated with new features and bug fixes","tags":["network automation","testing","validation","Cisco","Python"],"use_case":"Provides a powerful framework for network automation, testing, and validation, originally developed for Cisco's internal use"}},{"category":"Network state","homepage_url":"https://nuts.readthedocs.io/","id":"network-state--testing-compliance---querying--nuts","logo":"logos/1b712422548d5f0d59371a9eeb269250bcf84e26379c0dc74af63ba1eda4a664.png","name":"NUTS","subcategory":"Testing, Compliance & Querying","website":"https://nuts.readthedocs.io/","description":"NUTS (Network Unit Testing System) is a Pytest plugin enabling network testing using YAML files.","documentation_url":"https://nuts.readthedocs.io/en/latest/","featured":{"label":"Full Open Source","order":1},"github_discussions_url":"https://github.com/network-unit-testing-system/nuts/discussions","maturity":"full-open-source","oss":true,"repositories":[{"url":"https://github.com/network-unit-testing-system/nuts","primary":true}],"summary":{"business_use_case":"Improves network reliability and reduces downtime by enabling comprehensive and easy-to-write network tests","integration":"PyTest","personas":["Network Engineers","DevOps Engineers","QA Engineers"],"release_rate":"Regularly updated","tags":["network testing","pytest plugin","yaml","vendor-neutral"],"use_case":"Simplifies network testing by allowing engineers to write tests in YAML format using a PyTest plugin"}}]}